{"input":{"ourVersion":"1.47.0","commit":"d5e9aa0227e057a60c82568bf31c04730dc15dcd","locale":"en","devMode":false,"absoluteFolderPath":"/home/michael/.vscode-oss/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1594597052010},"result":[{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"5.1.3","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.41.0"},"keywords":["multi-root ready","prettier","formatter","javascript","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["*"],"icon":"icon.png","main":"./dist/extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install","prettier":"prettier --write '**/*.{ts,json,md,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"**/*.{ts,json,md,yml,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/glob":"^7.1.2","@types/mocha":"^7.0.2","@types/node":"^12","@types/prettier":"^2.0.1","@types/resolve":"^1.17.0","@types/semver":"^7.3.1","@types/sinon":"^9.0.4","@types/vscode":"1.41","@typescript-eslint/eslint-plugin":"^3.5.0","@typescript-eslint/parser":"^3.5.0","eslint":"^7.3.1","eslint-config-prettier":"^6.11.0","glob":"^7.1.6","husky":"^4.2.5","lint-staged":"^10.2.11","mocha":"^8.0.1","sinon":"^9.0.2","ts-loader":"^7.0.5","typescript":"^3.9.6","vsce":"^1.77.0","vscode-nls-dev":"^3.3.2","vscode-test":"^1.4.0","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"dependencies":{"find-up":"^4.1.0","ignore":"^5.1.8","mem":"^6.1.0","prettier":"^2.0.5","resolve":"^1.17.0","semver":"^7.3.2","vscode-nls":"^4.1.2"},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"If true, this extension will process files in node_modules","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a .prettierignore file","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the prettier module","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignores` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) donâ€™t indent to save an indentation level, but this might break code folding in your editor.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"}]},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/michael/.vscode-oss/extensions/esbenp.prettier-vscode-5.1.3","path":"/home/michael/.vscode-oss/extensions/esbenp.prettier-vscode-5.1.3","scheme":"file"}},{"name":"elixir-ls","displayName":"ElixirLS: Elixir support and debugger","homepage":"https://github.com/elixir-lsp/elixir-ls","repository":{"type":"git","url":"https://github.com/elixir-lsp/vscode-elixir-ls.git"},"icon":"images/logo.png","description":"Elixir support with debugger, autocomplete, and more. Powered by ElixirLS.","author":"The Elixir community","license":"MIT","publisher":"JakeBecker","version":"0.5.0","engines":{"vscode":"^1.44.0"},"categories":["Programming Languages","Debuggers"],"activationEvents":["workspaceContains:**/*.ex","workspaceContains:**/*.exs","onLanguage:elixir","onLanguage:eex","onLanguage:html-eex"],"main":"./out/extension","contributes":{"configurationDefaults":{"[elixir]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.wordBasedSuggestions":false,"editor.formatOnType":true,"editor.trimAutoWhitespace":false,"files.trimTrailingWhitespace":true,"files.insertFinalNewline":true,"files.trimFinalNewlines":true},"[html-eex]":{"editor.trimAutoWhitespace":false,"files.trimTrailingWhitespace":true,"files.insertFinalNewline":true,"files.trimFinalNewlines":true}},"configuration":{"title":"ElixirLS","properties":{"elixirLS.dialyzerEnabled":{"scope":"resource","type":"boolean","default":true,"description":"Run ElixirLS's rapid Dialyzer when code is saved"},"elixirLS.dialyzerWarnOpts":{"scope":"resource","description":"Dialyzer options to enable or disable warnings. See Dialyzer's documentation for options. Note that the \"race_conditions\" option is unsupported","type":"array","uniqueItems":true,"items":{"type":"string","enum":["error_handling","no_behaviours","no_contracts","no_fail_call","no_fun_app","no_improper_lists","no_match","no_missing_calls","no_opaque","no_return","no_undefined_callbacks","no_unused","underspecs","unknown","unmatched_returns","overspecs","specdiffs"]},"default":[]},"elixirLS.dialyzerFormat":{"scope":"resource","description":"Formatter to use for Dialyzer warnings","type":"string","enum":["dialyzer","dialyxir_short","dialyxir_long"],"markdownEnumDescriptions":["Original Dialyzer format","Same as `mix dialyzer --format short`","Same as `mix dialyzer --format long`"],"default":"dialyxir_long"},"elixirLS.mixEnv":{"scope":"resource","type":"string","description":"Mix environment to use for compilation","default":"test","minLength":1},"elixirLS.mixTarget":{"scope":"resource","type":"string","description":"Mix target to use for compilation (requires Elixir >= 1.8)","minLength":0},"elixirLS.projectDir":{"scope":"resource","type":"string","description":"Subdirectory containing Mix project if not in the project root","minLength":0,"default":""},"elixirLS.fetchDeps":{"scope":"resource","type":"boolean","description":"Automatically fetch project dependencies when compiling","default":true},"elixirLS.suggestSpecs":{"scope":"resource","type":"boolean","description":"Suggest @spec annotations inline using Dialyzer's inferred success typings (Requires Dialyzer)","default":true},"elixirLS.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Elixir language server."}}},"languages":[{"id":"elixir","aliases":["Elixir","elixir"],"extensions":[".ex",".exs"],"filenames":["mix.lock"],"configuration":"./elixir-language-configuration.json"},{"id":"eex","aliases":["Embedded Elixir","EEx","eex"],"extensions":[".eex",".leex"],"configuration":"./eex-language-configuration.json"},{"id":"html-eex","aliases":["HTML (Embedded Elixir)","HTML (EEx)"],"extensions":[".html.eex",".html.leex"],"configuration":"./eex-language-configuration.json"}],"grammars":[{"language":"elixir","scopeName":"source.elixir","path":"./syntaxes/elixir.json"},{"language":"eex","scopeName":"text.elixir","path":"./syntaxes/eex.json"},{"language":"html-eex","scopeName":"text.html.elixir","path":"./syntaxes/html-eex.json"}],"breakpoints":[{"language":"elixir"}],"debuggers":[{"type":"mix_task","label":"Mix Task","windows":{"program":"elixir-ls-release/debugger.bat"},"linux":{"program":"elixir-ls-release/debugger.sh"},"osx":{"program":"elixir-ls-release/debugger.sh"},"languages":["elixir"],"configurationAttributes":{"launch":{"required":["projectDir"],"properties":{"task":{"type":"string","description":"Mix task name (without arguments)","default":"run"},"taskArgs":{"type":"array","description":"List of arguments for task","default":[],"items":{"type":"string"}},"env":{"type":"object","description":"Environment variables to set before debugging. You may want to set MIX_ENV in here."},"projectDir":{"type":"string","description":"Project root directory (usually the workspace root)","default":"${workspaceRoot}"},"startApps":{"type":"boolean","description":"Run apps.start before requiring files. This should be set to true for Phoenix tests, but false in most other cases"},"excludeModules":{"type":"array","description":"Names of modules not to interpret. If a module contains NIFs, you should exclude it. Examples: Some.Module, :erlang_module","items":{"type":"string","minLength":1},"uniqueItems":true},"requireFiles":{"type":"array","description":"Paths for any .exs files to interpret before debugging in the order they should be loaded. Accepts path wildcards","items":{"type":"string"}},"stackTraceMode":{"type":"string","description":":int.stack_trace/1 option","enum":["all","no_tail","false"],"default":"no_tail"}}}},"initialConfigurations":[{"type":"mix_task","name":"mix (Default task)","request":"launch","projectDir":"${workspaceRoot}"},{"type":"mix_task","name":"mix test","request":"launch","task":"test","taskArgs":["--trace"],"startApps":true,"projectDir":"${workspaceRoot}","requireFiles":["test/**/test_helper.exs","test/**/*_test.exs"]}],"configurationSnippets":[{"label":"Elixir Mix","description":"Launch a Mix task","body":{"type":"mix_task","request":"launch","name":"mix ${1:task}","task":"${1:task}","taskArgs":[],"projectDir":"^\"\\${workspaceRoot}\""}}]}],"problemMatchers":[{"name":"mixCompileError","owner":"elixir","fileLocation":["relative","${workspaceRoot}"],"severity":"error","pattern":{"regexp":"^\\*\\* \\((\\w+)\\) (.*):(\\d+): (.*)$","file":2,"location":3,"message":0}},{"name":"mixCompileWarning","owner":"elixir","fileLocation":["relative","${workspaceRoot}"],"severity":"warning","pattern":[{"regexp":"^warning: (.*)$","message":1},{"regexp":"^  (.*):(\\d+)(.*)$","file":1,"location":2,"message":3}]},{"name":"mixTestFailure","owner":"elixir","fileLocation":["relative","${workspaceRoot}"],"severity":"warning","pattern":[{"regexp":"^\\s*\\d+\\) (.*)$","message":1},{"regexp":"^\\s*(.*):(\\d+)$","file":1,"location":2}]}],"commands":[{"command":"extension.copyDebugInfo","title":"ElixirLS: Copy Debug Info"}]},"scripts":{"vscode:prepublish":"./prepublish.bash","compile":"tsc -p ./ && cd elixir-ls && mix elixir_ls.release -o ../elixir-ls-release","update-vscode":"node ./node_modules/vscode/bin/install","test":"node ./out/test/runTest.js","lint":"eslint src/**/*.ts .*.js","check-formatting":"prettier --check src/**/*.ts .*.js "},"devDependencies":{"@types/glob":"^7.1.2","@types/mocha":"^7.0.2","@types/node":"^14.0.11","@types/shelljs":"^0.8.8","@types/vscode":"~1.44.0","@typescript-eslint/eslint-plugin":"^3.1.0","@typescript-eslint/parser":"^3.1.0","eslint":"^7.1.0","eslint-config-prettier":"^6.11.0","glob":"^7.1.6","husky":"^4.2.5","lint-staged":"^10.2.9","mocha":"^7.2.0","prettier":"2.0.5","typescript":"^3.9.5","vsce":"^1.75.0","vscode-test":"^1.4.0"},"dependencies":{"shelljs":"^0.8.4","vscode-languageclient":"^6.1.3"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,css,json,md}":["prettier --write","git add"],"*.js":["eslint --fix","git add"]},"uuid":"bc64531a-9b98-46f5-8ef9-88334d02cd60","isBuiltin":false,"isUnderDevelopment":false,"id":"JakeBecker.elixir-ls","identifier":{"value":"JakeBecker.elixir-ls","_lower":"jakebecker.elixir-ls"},"extensionLocation":{"$mid":1,"fsPath":"/home/michael/.vscode-oss/extensions/jakebecker.elixir-ls-0.5.0","path":"/home/michael/.vscode-oss/extensions/jakebecker.elixir-ls-0.5.0","scheme":"file"}},{"name":"material-theme","displayName":"One Dark Pro","description":"Atom's iconic One Dark theme for Visual Studio Code","version":"3.8.3","publisher":"zhuangtongfa","bugs":{"url":"https://github.com/Binaryify/OneDark-Pro/issues"},"homepage":"https://binaryify.github.io/OneDark-Pro/","repository":{"type":"git","url":"https://github.com/Binaryify/OneDark-Pro"},"engines":{"vscode":"^1.40.0"},"activationEvents":["*"],"main":"./out/extension.js","categories":["Themes"],"extensionKind":["ui","workspace"],"eslintConfig":{"extends":["@mskelton","@mskelton/eslint-config/typescript"],"plugins":["html"],"rules":{"sort/imports":"off"}},"scripts":{"docs":"docsify serve docs","compile:theme":"ts-node --project scripts/tsconfig.json scripts/generate-theme.ts","compile:ts":"tsc -p src","compile":"yarn compile:theme && yarn compile:ts","lint":"eslint . --ext .ts","watch:theme":"nodemon ./scripts/generate-theme.ts","watch:ts":"yarn compile:ts -w","vscode:prepublish":"yarn compile:sass && yarn compile","package":"vsce package","compile:sass":"npx sass --no-source-map scss:styles && npx sass --no-source-map scss:styles/origin"},"pre-commit":[],"prettier":{"singleQuote":true,"semi":false},"contributes":{"markdown.previewStyles":["./styles/base-inside.css","./styles/markdown-inside.css","./styles/atom-one-dark-inside.css"],"commands":[{"command":"oneDarkPro.showChangelog","title":"show changelog","category":"OneDark Pro"},{"command":"oneDarkPro.setVivid","title":"set color be vivid","category":"OneDark Pro"},{"command":"oneDarkPro.cancelVivid","title":"set color be vivid","category":"OneDark Pro"},{"command":"oneDarkPro.setItalic","title":"set some code be italic","category":"OneDark Pro"},{"command":"oneDarkPro.cancelItalic","title":"set some code be italic","category":"OneDark Pro"},{"command":"oneDarkPro.setBold","title":"set some code be bold","category":"OneDark Pro"},{"command":"oneDarkPro.cancelBold","title":"set some code be bold","category":"OneDark Pro"}],"themes":[{"label":"One Dark Pro","uiTheme":"vs-dark","path":"./themes/OneDark-Pro.json"}],"configuration":{"title":"One Dark Pro","properties":{"oneDarkPro.editorTheme":{"type":"string","default":"","markdownDescription":"Switch different editor theme","enum":["Onedark Pro","nord","solarized","solarized flat","panda","ayu","vscode"]},"oneDarkPro.italic":{"type":"boolean","default":true,"description":"This setting will change some scope's font be italic"},"oneDarkPro.vivid":{"type":"boolean","default":false,"markdownDescription":"This setting will change the color more vivid"},"oneDarkPro.bold":{"type":"boolean","default":false,"markdownDescription":"This setting will change some scope's font be bold"},"oneDarkPro.markdownStyle":{"type":"boolean","default":true,"description":"Use markdown style"}}}},"icon":"icon.png","keywords":["one dark","onedark","one dark pro","theme","atom"],"devDependencies":{"@mskelton/eslint-config":"^5.8.0","@mskelton/prettier-config":"^5.0.0","@types/node":"^12.12.7","@types/vscode":"^1.40.0","@typescript-eslint/eslint-plugin":"^2.31.0","all-contributors-cli":"^6.11.0","docsify-cli":"^4.3.0","eslint":"^6.6.0","eslint-plugin-html":"^6.0.2","eslint-plugin-prettier":"^3.1.3","eslint-plugin-sort":"^1.4.0","nodemon":"^1.19.4","pre-commit":"^1.2.2","prettier":"^1.19.1","ts-node":"^8.5.0","typescript":"^3.7.2","vsce":"^1.69.0"},"galleryBanner":{"color":"#2d323b","theme":"dark"},"dependencies":{"marked":"^0.7.0"},"uuid":"26a529c9-2654-4b95-a63f-02f6a52429e6","isBuiltin":false,"isUnderDevelopment":false,"id":"zhuangtongfa.material-theme","identifier":{"value":"zhuangtongfa.material-theme","_lower":"zhuangtongfa.material-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/michael/.vscode-oss/extensions/zhuangtongfa.material-theme-3.8.3","path":"/home/michael/.vscode-oss/extensions/zhuangtongfa.material-theme-3.8.3","scheme":"file"}}]}